{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "35a24b60-074d-4ebb-89cf-34b8e0525791",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the number 9474\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "latest value of sum: 9474\n",
      "latest value of twemp: 0\n",
      "amstrong number\n"
     ]
    }
   ],
   "source": [
    "n=int(input('enter the number'))\n",
    "temp=n\n",
    "m=len(str(n))\n",
    "sum=0\n",
    "while temp>0:\n",
    "    digit=temp%10\n",
    "    sum += digit ** m\n",
    "    temp //=10\n",
    "print(\"latest value of sum:\",sum)\n",
    "print(\"latest value of twemp:\",temp)\n",
    "if sum==n:\n",
    "    print(\"amstrong number\")\n",
    "else:\n",
    "    print(\"not a amstrong number\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "4f01bd0a-afb6-4924-833d-1d64cea94400",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the number 156\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "latest value of sum: 12\n",
      "latest value of twemp: 0\n",
      "harshad number\n"
     ]
    }
   ],
   "source": [
    "n=int(input('enter the number'))\n",
    "temp=n\n",
    "sum=0\n",
    "while temp>0:\n",
    "    digit=temp%10\n",
    "    sum += digit\n",
    "    temp //=10\n",
    "print(\"latest value of sum:\",sum)\n",
    "print(\"latest value of twemp:\",temp)\n",
    "if sum%12==0:\n",
    "    print(\"harshad number\")\n",
    "else:\n",
    "    print(\"not a nivans number\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "0d319280-40ce-463e-b59d-c0ae11b3866a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 3 5 7 9 "
     ]
    }
   ],
   "source": [
    "for i in range (1,11,2):\n",
    "    print(i,end=' ')\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "a41f21f0-3a92-4994-9f73-936f27d383e1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter a word maanas\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "m a a n a s "
     ]
    }
   ],
   "source": [
    "word=input('enter a word')\n",
    "for ch in word:\n",
    "    print(ch,end=' ')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "083501c2-44aa-4084-95d2-466908658af2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 9 8 7 6 5 4 3 2 1 0 "
     ]
    }
   ],
   "source": [
    "for i in range (10,-1,-1):\n",
    "    print(i,end=' ')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "4cca819f-418c-488f-a4b2-54974cf1c97c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2\n",
      "4\n",
      "6\n",
      "8\n",
      "10\n",
      "12\n",
      "14\n",
      "16\n",
      "18\n",
      "20\n"
     ]
    }
   ],
   "source": [
    "for i in range (1,11):\n",
    "    i*=2\n",
    "    print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "862ff7c8-c2ea-4f5b-9d1d-a258f3ef9b3a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "a9f57211-13b9-4fd2-be84-04691156bbff",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the number 4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "6\n",
      "24\n"
     ]
    }
   ],
   "source": [
    "n=int(input(\"enter the number\"))\n",
    "sum=1\n",
    "for i in range(1,n+1):\n",
    "    sum*=i\n",
    "    print(sum)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "a6c1406f-4a55-4e07-95c6-2595d9f5cbf8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the sizze 4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "* * * * \n",
      "*     * \n",
      "*     * \n",
      "* * * * \n"
     ]
    }
   ],
   "source": [
    "n=int(input(\"enter the sizze\"))\n",
    "for i in range (n):\n",
    "    for j in range(n):\n",
    "        if i==0 or i==n-1 or j==0 or j==n-1 :\n",
    "            print(\"*\",end=' ')\n",
    "        else:\n",
    "            print(\" \",end=' ')\n",
    "    print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "097cc27d-8461-447a-9d97-f0c824cd64d2",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
